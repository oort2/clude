import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
df=pd.read_csv("data/auto-mpg.csv")
df.info()

#머신러닝에 필요한 속성(열, 컬럼, 변수, 피처) 선택하기
ndf=df[['mpg','cylinders', 'horsepower','weight']]
ndf.corr()
sns.pairplot(ndf)


X=ndf[["weight"]] #독립변수
Y=ndf["mpg"]      # 종속변수
len(X)
len(Y)

#데이터분리(훈련/테스트)
from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X,Y,test_size=0.3, random_state=10)  #test_size=0.3: 훈련: 테스트=7:3, 기본값: 0.25
len(X_train)  #392*0.7 = 274.4 =>274 : 훈련데이터 독립변수
len(X_test)   #392*0.3 = 117.6 =>118 : 테스트데이터 독립변수
len(Y_train)                          #훈련데이터 종속변수
len(Y_test)   

y_hat[:10]   #예측
Y_test[:10]  #분석  _예측과 분석은 당연히 다를수밖에 없어.  평가가 필요

#평가
r_square=lr.score(X_test, Y_test) #스플릿된 텍스트로 보니까 0.68이고 밑에는 학습된 자료로하니까 더 높아진다.
r_square  #결정계수. 값이 1에 가까울수록 성능이 좋다 0.6822458558299325
r_square=lr.score(X , Y)
r_square    #0.6919759765239987
