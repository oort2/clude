# -*- coding: utf-8 -*-
"""
Created on Mon Apr  3 09:08:38 2023

@author: User
"""

'''
opencv 예제: 이미지 처리를 위한 툴
    pip install opencv-python


빅데이터 조건(3V)
1. Volume: 대용량
2. Velocity: 속도, 처리속도가 빠르다.
3. Veriety: 데이터의 다양성
   -정형데이터: dbms, csv, 엑셀=> pandas, numpy...
   -반정형데이터: xml, html, json => BeautifulSoup, selenium, json
   -비정형데이터: 이미지, 동영상 => opencv

'''

import cv2
title1, title2, title3 = "gray2gray", "gray2color", "gray2colora"
#imread: 이미지 파일을 읽기, 행렬 데이터로 변환
#cv2.IMREAD_GRAYSCALE: 흑백이미지로 처리
#cv2.IMREAD_COLOR: 컬러 이미지로 처리
#cv2.IMREAD_UNCHANGED: 원래 이미지로 처리
gray2gray= cv2.imread("images/read_gray.jpg", cv2.IMREAD_GRAYSCALE)
gray2color= cv2.imread("images/read_gray.jpg", cv2.IMREAD_COLOR)
gray2colora= cv2.imread("images/read_gray.jpg", cv2.IMREAD_UNCHANGED)
if ( gray2gray is None or gray2color is None):
    raise Exception("영상파일 읽기 에러")
type(gray2gray)  #numpy.ndarray

gray2gray.shape  #(300, 400)
gray2gray.ndim #2
gray2gray[0]
gray2color.shape #(300, 400, 3)
gray2color.ndim #3
gray2color[0]
gray2color.shape #(300, 400, 3)
gray2color.ndim #3


#imshow: 행렬 데이터를 이미지로 출력   
cv2.imshow(title1,gray2gray)
cv2.imshow(title2,gray2color)
cv2.imshow(title3,gray2colora)
cv2.waitKey(0)


cv2.destroyAllwindows()



gray2gray= cv2.imread("images/read_color.jpg", cv2.IMREAD_GRAYSCALE)
gray2color= cv2.imread("images/read_color.jpg", cv2.IMREAD_COLOR)
gray2colora= cv2.imread("images/read_color.jpg", cv2.IMREAD_UNCHANGED)
if ( gray2gray is None or gray2color is None):
    raise Exception("영상파일 읽기 에러")
type(gray2gray)  #numpy.ndarray

gray2gray.shape  #(300, 400)
gray2gray.ndim #2
gray2gray[0]
gray2color.shape #(300, 400, 3)
gray2color.ndim #3
gray2color[0]
gray2color.shape #(300, 400, 3)
gray2color.ndim #3


#imshow: 행렬 데이터를 이미지로 출력   
cv2.imshow(title1,gray2gray)   
cv2.imshow(title2,gray2color)
cv2.imshow(title3,gray2colora)
cv2.waitKey(0)


cv2.destroyAllwindows()

#이미지 저장하기
image = cv2.imread("images/read_color.jpg",cv2.IMREAD_COLOR)
#cv2.IMWRITE_JPEG_QUALITY,10: 화질설정
#            0~100(95) : 숫자가 높으면 화질이 좋음
params_jpg = (cv2.IMWRITE_JPEG_QUALITY,10) #튜플, 리스트 가능
#cv2.INWRITE_PNG_COMPRESSION,9: png파일의 압축레벨 설정
            #0~9(3) : 압축레벨이 높으면 이미지 용량이 작다.
params_png = [cv2.IMWRITE_PNG_COMPRESSION,9] #튜플, 리스트 가능


import matplotlib.pylab as plt

cv2.imwrite("images/write_test0.png",image) #204k 확장자에 맞춰서 이미지 등록
test0=cv2.imread("images/write_test0.png")
plt.imshow(test0)

cv2.imwrite("images/write_test1.jpg",image) #51k 확장자에 맞춰서 이미지 등록
test1=cv2.imread("images/write_test1.jpg")
plt.imshow(test1)


cv2.imwrite("images/write_test2.jpg",image, params_jpg) #6k
test2=cv2.imread("images/write_test2.jpg")
plt.imshow(test2)


cv2.imwrite("images/write_test3.png",image, params_jpg) #171k
test3=cv2.imread("images/write_test3.png")
plt.imshow(test3)

cv2.imwrite("images/write_test4.bmp",image) #352k
test4=cv2.imread("images/write_test4.bmp")
plt.imshow(test4)

cv2.imwrite("images/write_test5.jpg",image,\
            (cv2.IMWRITE_JPEG_QUALITY,100)) #90k
test5=cv2.imread("images/write_test5.jpg")
plt.imshow(test5)

cv2.imshow("0",test0)
cv2.imshow("1",test1)
cv2.imshow("2",test2)
cv2.imshow("3",test3)
cv2.imshow("4",test4)
cv2.imshow("5",test5)

cv2.waitKey(0)


#이미지형태 분석
def print_matInfo(name, image):
    #image : 이미지를 읽은 배열값. 이미지데이터
    #image.dtype : 배열요소의 자료형
    if image.dtype =='uint8': mat_type="CV_8U" #부호없는 8비트(0~255)
    elif image.dtype =='int8': mat_type="CV_8S" #부호있는 8비트(0~255)
    elif image.dtype =='uint16':mat_type="CV_16U" #부호없는 16비트(0~255)
    elif image.dtype =='int16':mat_type="CV_16S" #부호있는 16비트(0~255)
    elif image.dtype =='float32':mat_type="CV_32F"#부호있는 32비트실수형
    elif image.dtype =='float64':mat_type="CV_64F" #부호있는 64비트실수형
    #image.ndim : 배열의 차수
    nchannel = 3 if image.ndim == 3 else 1
    print("%12s: dtype(%s), channels(%s) -> mat_type(%sC%d)"
    % (name, image.dtype, nchannel, mat_type, nchannel))

#imread : 이미지 파일을 배열 저장
gray2gray= cv2.imread("images/read_gray.jpg", cv2.IMREAD_GRAYSCALE)
gray2color= cv2.imread("images/read_gray.jpg", cv2.IMREAD_COLOR)
gray2colora= cv2.imread("images/read_gray.jpg", cv2.IMREAD_UNCHANGED)
color2gray= cv2.imread("images/read_color.jpg", cv2.IMREAD_GRAYSCALE)
color2color= cv2.imread("images/read_color.jpg", cv2.IMREAD_COLOR)
color2colora= cv2.imread("images/read_color.jpg", cv2.IMREAD_UNCHANGED)

test4 = cv2.imread("images/write_test4.bmp")

print_matInfo("gray2gray", gray2gray)
print_matInfo("gray2color", gray2color)
print_matInfo("gray2colora", gray2colora)
print_matInfo("color2gray", color2gray)
print_matInfo("color2color", color2color)
print_matInfo("color2colora", color2colora)

print_matInfo("test4", test4)

color1 = cv2.imread("images/read_16.tif", cv2.IMREAD_UNCHANGED)
color2 = cv2.imread("images/read_32.tif", cv2.IMREAD_UNCHANGED)
color1.shape
color2.shape
color1[10,10]
color2[10,10]
cv2.imshow("read_16.tif",color1)
cv2.imshow("read_32.tif",color2) 
cv2.waitKey(0)
print_matInfo("color1",color1)
print_matInfo("color2",color2)         


#사진의 밝기 조정
image=cv2.imread("images/read_gray.jpg", cv2.IMREAD_GRAYSCALE)      
cv2.imshow("original image", image)
cv2.waitKey(0)

#OpenCv 함수를 이용하여 사진의 밝기 조정
dst1 = cv2.add(image,100) #image 배열의 값 +100
dst2 = cv2.subtract(image,100) #image배열의 값 -100
           
cv2.imshow("dst1 image", dst1)
cv2.imshow("dst2 image", dst2)         
cv2.waitKey(0)
           
#numpy 배열을 이용하여 사진의 밝기 조정
dst3=image+100 #image 배열의 값 +100
dst4=image-100 #image 배열의 값 -100


cv2.imshow("dst3 image", dst3)
cv2.imshow("dst4 image", dst4)
cv2.waitKey(0)


########동영상파일
import cv2
capture = cv2.VideoCapture(0) #카메라 객체 연결
if capture.isOpened() == False:
    raise Exception("카메라 연결안됨")


#카메라 속성값
print("너비 %d" % capture.get(cv2.CAP_PROP_FRAME_WIDTH)) #가로길이
print("높이 %d" % capture.get(cv2.CAP_PROP_FRAME_HEIGHT)) #세로길이
print("노출 %d" % capture.get(cv2.CAP_PROP_EXPOSURE))  
print("밝기 %d" % capture.get(cv2.CAP_PROP_BRIGHTNESS))  


def put_string(frame, text, pt, value, color=(120, 200, 90)):
    #frame: 동영상 출력 영역. 이미지
    #text: 출력할 문자내용
    #pt: 문자출력위치(10,40)
    text += str(value) #EXPOS: -1, 출력할 문자내용
    shade =(pt[0]+2, pt[1]+2) #(12,42) 그림자의 위치값
    font = cv2.FONT_HERSHEY_SIMPLEX #폰트설정.(영문만가능)
    #0.7 : fontscale. 폰트 크기
    #(0,0,0): 검정색
    #2 두께
    cv2.putText(frame, text, shade, font, 0.7,(0,0,0), 2) #그림자효과
    cv2.putText(frame, text, pt, font, 0.7, color, 2)



while True : #무한반복.
#frame: 순간이미지
    ret, frame = capture.read() #카메라 영상 받기
    if not ret: break
    if cv2.waitKey(30) ==27 : break #esc 입력하면 정지한다
    #frame: 텍스트를 출력한 이미지 파일
    title = "View Frame from Camera"
    cv2.imshow(title, frame) #이미지 화면 출력
capture.release() #카메라 접속 종료



